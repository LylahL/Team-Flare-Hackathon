name: Automated Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests every day at midnight
    - cron: '0 0 * * *'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci
          
      - name: Run backend unit tests
        run: cd backend && npm test
        env:
          NODE_ENV: test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          MONGO_URI: ${{ secrets.TEST_MONGO_URI }}
          
      - name: Run frontend unit tests
        run: cd frontend && npm test -- --coverage
        
      - name: Upload test coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
          
      - name: Run integration tests
        run: cd backend && npm run test:integration
        env:
          NODE_ENV: test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          MONGO_URI: mongodb://localhost:27017/test
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          
  e2e-tests:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: integration-tests
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
          
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm ci
          cd frontend && npm ci
          cd ../backend && npm ci
          
      - name: Install Playwright
        run: cd frontend && npx playwright install --with-deps
        
      - name: Start backend server
        run: cd backend && npm run start:test &
        env:
          NODE_ENV: test
          PORT: 5000
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          MONGO_URI: mongodb://localhost:27017/test
          
      - name: Start frontend server
        run: cd frontend && npm run start:test &
        env:
          REACT_APP_API_URL: http://localhost:5000/api
          PORT: 5200
          
      - name: Wait for servers
        run: sleep 10s
        
      - name: Run E2E tests
        run: cd frontend && npm run test:e2e
        
      - name: Upload E2E test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: frontend/playwright-report/

